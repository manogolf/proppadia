name: Retrain models (nightly)

on:
  schedule:
    - cron: "30 08 * * *" # runs daily at 08:30 UTC
  workflow_dispatch:
    inputs:
      days_back:
        description: "Training window (days)"
        default: "365"
      row_limit:
        description: "Row cap"
        default: "50000"

jobs:
  train-and-upload:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    concurrency:
      group: retrain-models
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Set env for training
        run: |
          echo "MODELS_DIR=$GITHUB_WORKSPACE/models_out" >> $GITHUB_ENV
          echo "OMP_NUM_THREADS=2" >> $GITHUB_ENV
          echo "MKL_NUM_THREADS=2" >> $GITHUB_ENV

      - name: Retrain all models
        run: |
          python -m backend.scripts.retrain_all_models --quiet \
            --days-back "${{ inputs.days_back || '365' }}" \
            --row-limit "${{ inputs.row_limit || '50000' }}"
        # If your script doesn't support those flags yet, drop them.

      - name: Package & upload to Supabase Storage
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          MODELS_DIR: ${{ env.MODELS_DIR }}
          MODELS_BUCKET: models
          BUNDLE_OBJECT: models_bundle.tgz
        run: |
          python scripts/modeling/package_and_upload.py

      # Optional: keep a build artifact for quick restores/debugging
      - name: Upload tarball as artifact
        if: always()
        run: |
          tar -czf models_bundle_local.tgz -C "$MODELS_DIR" .
        shell: bash
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: models_bundle
          path: models_bundle_local.tgz
